# Plan for Deleting Original Files

The pile package is a consolidated version of the core and classes packages that avoids circular dependencies. We've verified that it works by building and running the demo with it.

## Files that can be deleted immediately
These files have direct replacements in the pile package and don't appear to be imported elsewhere.

From core:
- immediate.go
- object.go

From classes:
- array.go
- block.go
- byte_array.go
- class.go
- class_registry.go
- dictionary.go
- exception.go
- method.go
- string.go
- symbol.go

## Next steps for full implementation
1. Update other packages to import from "pile" instead of "core" and "classes"
2. Run all tests against the pile package
3. Update the main.go and factorial_demo.go to use the pile package
4. Update the vm implementation to use pile instead of core and classes

## Implementation approach
1. First, create a branch for these changes
2. Make the changes one package at a time
3. Run tests after each package change
4. Once all tests pass, we can delete the original files

## Conclusion
The pile package successfully replaces functionality from core and classes, but other parts of the codebase still need to be updated to use it instead of the original packages. After the full implementation, we can safely delete all the original files.